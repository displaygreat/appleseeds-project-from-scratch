{"version":3,"sources":["components/RecipesNavbar.js","pages/HomePage.js","pages/LoginPage.js","components/RecipeCard.js","components/PieChart.js","pages/RecipesPage.js","pages/signupPage.js","App.js","reportWebVitals.js","index.js"],"names":["RecipesNavbar","props","activeUser","handleLogout","loginEl","Nav","Link","href","signupEl","logoutEl","onClick","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","id","className","fname","HomePage","React","Component","LoginPage","validateLogin","i","users","length","pwd","state","email","handleLogin","window","location","alert","Form","Group","controlId","Label","Control","type","onChange","event","setState","target","value","placeholder","this","Button","block","variant","RecipeCard","Col","lg","md","sm","Card","Img","src","img","alt","name","Body","Title","Text","desc","PieChart","data","RecipesPage","openModal","isModalActive","closeModal","handleNewRecipe","newRecipe","recipeName","recipeDesc","recipeImg","difficulty","userId","allRecipes","addRecipe","recipeDifficulty","animationIndex","setTimeout","push","to","filteredRecipes","filter","recipe","easyRecipes","difficultRecipes","recipeElements","map","index","isAnimating","labels","datasets","backgroundColor","hoverBackgroundColor","Jumbotron","Row","Modal","show","onHide","Header","closeButton","as","custom","Footer","SignupPage","App","recipeObj","concat","localStorage","setItem","JSON","stringify","userObj","getItem","parse","recipeJSON","exact","path","Container","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e8d87dca.chunk.js","sourcesContent":["import {  Nav, Navbar } from \"react-bootstrap\";\r\n\r\n// will show login/signup for unregistered users & logout to registered users\r\n// Props:\r\n//  activeUser - an object describing the user\r\nconst RecipesNavbar = function(props) {\r\n    const {activeUser, handleLogout} = props;\r\n\r\n    const loginEl = ( ! activeUser)  ?  <Nav.Link href=\"/#/login\">Login</Nav.Link>  : null;\r\n    const signupEl = ( ! activeUser) ?  <Nav.Link href=\"/#/signup\">Signup</Nav.Link>  : null;\r\n    const logoutEl = (activeUser) ?  <Nav.Link onClick={handleLogout}>Logout</Nav.Link> : null;\r\n    return (\r\n        <Navbar bg=\"light\" expand=\"lg\">\r\n  <Navbar.Brand href=\"/#/\">RecipesBook</Navbar.Brand>\r\n  \r\n  <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n  <Navbar.Collapse id=\"basic-navbar-nav\">\r\n    <Nav className=\"mr-auto\">\r\n      <Nav.Link href=\"/#/recipes\">Recipes</Nav.Link>\r\n    </Nav>\r\n\r\n  </Navbar.Collapse>\r\n  <Nav className=\"ml-auto\">\r\n        {loginEl}\r\n        {signupEl}\r\n        {logoutEl}\r\n       \r\n\r\n    </Nav>\r\n    <Nav> {activeUser ? 'Hello ' + activeUser.fname : ''}</Nav>\r\n</Navbar>\r\n    )\r\n}\r\nexport default RecipesNavbar;","import React from 'react';\r\nimport RecipesNavbar from '../components/RecipesNavbar';\r\n\r\nclass HomePage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        return <div>This is the fixed homepage</div>\r\n    }\r\n}\r\nexport default HomePage;","import React from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport users from '../data/users.json';\r\n\r\nclass LoginPage extends React.Component {\r\n    constructor(props){\r\n        // super(props);\r\n        \r\n        // Controlled component steps\r\n        // 1. Add key to state\r\n        // 2. map to value\r\n        // 3. update using onChange\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            pwd: ''\r\n        }\r\n    }\r\n    validateLogin = () => {\r\n        for( let i = 0; i< users.length; i++) {\r\n\r\n            if( users[i].pwd == this.state.pwd && users[i].email == this.state.email) {\r\n                this.props.handleLogin(users[i]);\r\n                window.location.href = '/#/recipes'\r\n                return;\r\n                // We will login the user\r\n                // return the found user\r\n        }\r\n  \r\n        alert('user not found');\r\n        // alert that the user does not exist\r\n        }\r\n    }\r\n    render() {\r\n        // Steps to login\r\n        // 1. if the user exists in the user.json?\r\n        // 2. if the user password matches\r\n        // 3. update the activeUser state in <App> (using handleLogin() prop)\r\n        return (\r\n            <div className=\"c-login-page\">\r\n                <h1>Login</h1>\r\n            <Form>\r\n                <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Label>Email address</Form.Label>\r\n                <Form.Control type=\"email\" \r\n                onChange={(event) => {this.setState({email: event.target.value})}} \r\n                placeholder=\"Enter email\" value={this.state.email} />\r\n                </Form.Group>\r\n                \r\n                <Form.Group controlId=\"formBasicPassword\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control type=\"password\"\r\n                 onChange={(event) => {this.setState({pwd: event.target.value})}} \r\n                 placeholder=\"Password\"  value={this.state.pwd}/>\r\n                </Form.Group>\r\n                <Button onClick={this.validateLogin} block variant=\"success\" type=\"button\">\r\n                Login\r\n                </Button>\r\n            </Form> \r\n            <br/>\r\n            <a href=\"/#/signup\">To Signup</a>\r\n            </div>\r\n            )\r\n        }\r\n    }\r\n    export default LoginPage;","import { Card, Col } from \"react-bootstrap\"\r\nimport './RecipeCard.css';\r\n\r\nconst RecipeCard = function(props) {\r\n    return (\r\n    <Col lg={3} md={6} sm={12}>\r\n      <div className={\"card-container \" + (props.isAnimating) ? \"animation\": ''}>\r\n        <Card>\r\n        <Card.Img variant=\"top\" src={props.img} alt={props.name} />\r\n        <Card.Body>\r\n        <Card.Title>{props.name}</Card.Title>\r\n        <Card.Text>\r\n                    {props.desc}\r\n        </Card.Text>\r\n        </Card.Body>\r\n    </Card>\r\n    </div>\r\n  </Col>\r\n  )\r\n}\r\nexport default RecipeCard;","import React from 'react';\r\nimport { Pie } from 'react-chartjs-2';\r\n\r\nclass PieChart extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    render(){\r\n        return <Pie data={this.props.data}/>\r\n    }\r\n}\r\nexport default PieChart;","import React from 'react';\r\nimport { Button, Row, Jumbotron, Modal, Form } from 'react-bootstrap';\r\nimport { Redirect } from 'react-router-dom';\r\nimport './RecipesPage.css'\r\nimport RecipeCard from '../components/RecipeCard';\r\nimport PieChart from '../components/PieChart';\r\nclass RecipesPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            recipeName: '',\r\n            recipeDesc: '',\r\n            recipeImg: '',\r\n            recipeDifficulty: 1,\r\n            isModalActive: false,\r\n            animationIndex: 0,\r\n        }\r\n    }\r\n    openModal = () => {\r\n        this.setState({isModalActive: true});\r\n    }\r\n    \r\n    closeModal = () => {\r\n        this.setState({isModalActive: false});\r\n    }\r\n    handleNewRecipe = () => {\r\n        const newRecipe = {\r\n            name: this.state.recipeName,\r\n            desc: this.state.recipeDesc,\r\n            img: this.state.recipeImg,\r\n            difficulty: 2,\r\n            userId: this.props.activeUser.id,\r\n            id: this.props.allRecipes.length + 1\r\n        }\r\n\r\n        this.closeModal();\r\n        this.props.addRecipe(newRecipe);\r\n        this.setState({\r\n            recipeName: '',\r\n            recipeDesc: '',\r\n            recipeImg: '',\r\n            recipeDifficulty: 1,\r\n        })\r\n    }\r\n    componentDidMount(){\r\n        for(let i = 0; i<this.props.allRecipes.length; i++) {\r\n            setTimeout(() => {\r\n                this.setState({\r\n                    animationIndex: i,\r\n                })\r\n            }, (i * 1 * 1000));\r\n        }\r\n\r\n    }\r\n    render() {\r\n        \r\n        if( ! this.props.activeUser){\r\n            return <Redirect push to=\"/login\" />\r\n        }\r\n        const filteredRecipes = this.props.allRecipes.filter( (recipe) => {  // immutable - the original array is not changed\r\n            return this.props.activeUser.id === recipe.userId;\r\n        })\r\n\r\n\r\n        \r\n        const easyRecipes = filteredRecipes.filter(recipe => recipe.difficulty === 1).length;\r\n        const difficultRecipes = filteredRecipes.filter(recipe => recipe.difficulty === 2).length;\r\n        \r\n        \r\n        const recipeElements = filteredRecipes.map((recipe, index) => {\r\n\r\n            return (<RecipeCard isAnimating={index <= this.state.animationIndex} key={recipe.id} name={recipe.name} img={recipe.img} desc={recipe.desc}/>);\r\n        })\r\n \r\n        const data = {\r\n            labels: [\r\n                'Easy',\r\n                'Difficult',\r\n            ],\r\n            datasets: [{\r\n                data: [easyRecipes, difficultRecipes],\r\n                backgroundColor: [\r\n                '#36A2EB',\r\n                '#FF6384',\r\n\r\n\r\n                ],\r\n                hoverBackgroundColor: [\r\n                '#36A2EB',\r\n                '#FF6384',\r\n                ]\r\n            }]\r\n        };\r\n\r\n\r\n        return (\r\n            <div className=\"c-recipes-page\">\r\n                <Jumbotron>\r\n                <h1 className=\"text-center\">Recipes by {this.props.activeUser.fname}</h1>\r\n                <Button className=\"ml-auto\" onClick={this.openModal}> Add Recipe</Button>\r\n                </Jumbotron>\r\n                <Row className=\"justify-content-between\">\r\n                \r\n                {recipeElements}\r\n                </Row>\r\n\r\n                <div>\r\n                  <PieChart data={data} />\r\n                </div>\r\n                <Modal show={this.state.isModalActive} onHide={()=>{}}>\r\n                            <Modal.Header closeButton>\r\n                            <Modal.Title>Modal heading</Modal.Title>\r\n                            </Modal.Header>\r\n                            <Modal.Body>\r\n                            <Form>\r\n                       \r\n                        <Form.Label>Recipe name</Form.Label>\r\n                        <Form.Control type=\"text\" \r\n                        onChange={(event) => {this.setState({recipeName: event.target.value})}} \r\n                        placeholder=\"\" value={this.state.recipeName} />\r\n                                                \r\n                        <Form.Label>Description</Form.Label>\r\n                        <Form.Control type=\"text\" \r\n                        onChange={(event) => {this.setState({recipeDesc: event.target.value})}} \r\n                        placeholder=\"\" value={this.state.recipeDesc} />\r\n                        \r\n                        <Form.Label>Image</Form.Label>\r\n                        <Form.Control type=\"text\" \r\n                        onChange={(event) => {this.setState({recipeImg: event.target.value})}} \r\n                        placeholder=\"\" \r\n                        value={this.state.recipeImg} />\r\n\r\n                        <Form.Label>Difficulty</Form.Label>\r\n                        <Form.Control \r\n                        value={this.state.recipeDifficulty} \r\n                        onChange={(event) => {\r\n                            this.setState({recipeDifficulty: event.target.value})\r\n                        }} \r\n                        as=\"select\" custom>\r\n                            <option value=\"1\">Easy</option>\r\n                            <option value=\"2\">Difficult</option>\r\n                        </Form.Control>\r\n\r\n                    </Form> \r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n\r\n                    <Button variant=\"primary\" onClick={this.handleNewRecipe}>\r\n                        Save New recipe\r\n                    </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default RecipesPage;","import React from 'react';\r\nclass SignupPage extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"c-signup-page\">signup</div>\r\n        )\r\n    }\r\n}\r\nexport default SignupPage;","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Container } from 'react-bootstrap';\r\nimport { HashRouter, Route, Switch } from 'react-router-dom';\r\nimport './App.css';\r\n\r\nimport HomePage from './pages/HomePage';\r\n\r\nimport LoginPage from './pages/LoginPage';\r\nimport RecipesPage from './pages/RecipesPage';\r\nimport SignupPage from './pages/signupPage';\r\nimport RecipesNavbar from './components/RecipesNavbar';\r\nimport recipeJSON from './data/recipes.json';\r\n\r\n// state:\r\n//  activeuser: obj - if a user is logged in, this has an object describing the user. \r\n//              if Noone is logged in, it equals null\r\n\r\nclass App extends React.Component{\r\n   // To use localStorage:\r\n   // 1. Check if the key already exists  e.g  if(localStorage.getItem('localRecipes'))\r\n   // 2. Convert value to Object - JSON.parse\r\n   // 3. Put into state\r\n   // 4. Everytime the state changes, also update the localstorage (using JSON.stringify)\r\n    constructor(props) {\r\n      super(props);\r\n      let allRecipes;\r\n      if(localStorage.getItem('localRecipes')) {\r\n        allRecipes = JSON.parse(localStorage.getItem('localRecipes'));\r\n      }\r\n      else{\r\n        allRecipes = recipeJSON;\r\n      }\r\n      this.state = {  \r\n        //  activeUser: null,\r\n        activeUser:{\r\n          \"id\": 1,\r\n          \"fname\": \"Yaron\",\r\n          \"lname\": \"Doe\",\r\n          \"email\": \"skarlinski@gmail.com\",\r\n          \"pwd\": \"123\",\r\n          \r\n      },\r\n        allRecipes: allRecipes,\r\n      }\r\n    }\r\n    addRecipe = (recipeObj) => {\r\n      this.setState({allRecipes: this.state.allRecipes.concat(recipeObj)});\r\n      localStorage.setItem('localRecipes', JSON.stringify(\r\n        this.state.allRecipes.concat(recipeObj)\r\n      ))\r\n    } \r\n    handleLogin = (userObj) => {\r\n      this.setState({activeUser: userObj})\r\n    }\r\n    handleLogout = () => {\r\n      this.setState({activeUser: null})\r\n    }\r\n    render() {return (\r\n      <HashRouter>\r\n        <Route exact path={['/', '/recipes']}>\r\n        <RecipesNavbar handleLogout={this.handleLogout} activeUser={this.state.activeUser}/>\r\n        </Route>\r\n        <Container>\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <HomePage activeUser={this.state.activeUser}/>\r\n            </Route>\r\n            <Route exact path=\"/recipes\">\r\n              <RecipesPage addRecipe={this.addRecipe} allRecipes={this.state.allRecipes} activeUser={this.state.activeUser}/>\r\n            </Route>\r\n            <Route exact path=\"/login\">\r\n              <LoginPage handleLogin={this.handleLogin}/>\r\n            </Route>\r\n            <Route exact path=\"/signup\">\r\n              <SignupPage />\r\n            </Route>\r\n\r\n          </Switch> \r\n      </Container>\r\n      </HashRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}